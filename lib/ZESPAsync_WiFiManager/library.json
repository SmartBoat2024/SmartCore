{
  "name": "SmartConnect_Async_WiFiManager",
  "version": "1.0.0",
  "keywords": "wifi, WiFiManager, esp8266, esp32, esp32-s2, esp32-s3, esp32-c3, AsyncWebServer, Async-WiFiManager, MultiWiFi, Async, Communication, Credentials, Config-Portal, DoubleReset, MultiReset, littlefs, spiffs, dns-server, iot, eeprom",
  "description": "Smart Connect fork of ESPAsync_WiFiManager for ESP32-S3, WiFi Connection Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal. This Library is used for configuring ESP32 (including ESP32-S2, ESP32-S3 and ESP32-C3), ESP8266 modules WiFi Credentials at runtime. You can also specify static DNS servers, personalized HostName, fixed or random AP channel. Now with MultiWiFi auto(Re)connect, configurable CORS Header and auto-Timezone features. Auto detect ESP32 core and use either built-in LittleFS or external LITTLEFS library. Using AsyncDNSServer instead of DNSServer. Now using correct ESP32 chipIP and optionally display Credentials on Config Portal, and custom GUI, SmartConnect and Standalone buttons",
  "authors":
  {
    "name":  "Khoi Hoang/Chris Saunders",
    "url":   "https://github.com/khoih-prog",
    "maintainer": true
  },
  "repository":
  {
    "type": "git",
    "url": "https://github.com/khoih-prog/ESPAsync_WiFiManager"
  },
  "homepage": "https://github.com/khoih-prog/ESPAsync_WiFiManager",
  "export": {
    "exclude": [
      "linux",
      "extras",
      "tests"
    ]
  },
  "dependencies": [
    {
      "owner": "me-no-dev",
      "name": "AsyncTCP",
      "version": ">=1.1.1",
      "platforms": ["espressif32"]
    },
    {
      "url": "https://github.com/me-no-dev/ESPAsyncWebServer.git",
      "version": ">=1.2.3",
      "platforms": ["espressif8266", "espressif32"]
    },
    {
      "owner": "khoih-prog",
      "name": "ESP_DoubleResetDetector",
      "version": ">=1.3.2",
      "platforms": ["espressif8266", "espressif32"]
    }
  ],
  "license": "MIT",
  "frameworks": "*",
  "platforms": ["espressif8266", "espressif32"],
  "examples": "examples/*/*/*.ino",
  "headers": [
    "SmartConnect_Async_WiFiManager.h",
    "SmartConnect_Async_WiFiManager.hpp",
    "SmartConnect_Async_WiFiManager_Impl.h",
    "SmartConnect_Async_WiFiManager_Debug.h"
  ]
}
